name: Rust - test

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'rust/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'rust/**'
      - '.github/workflows/**'

permissions:
  contents: read

jobs:
  build:
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # pin@v4
      - name: 'Clone ONNX Runtime Source'
        run: git clone --recursive https://github.com/Microsoft/onnxruntime.git
      - run: git fetch --all --tags
      - name: Checkout v1.16.3
        run: git checkout tags/v1.16.3 -b build
      - run: cmake -S cmake -B build/Linux/Release
        working-directory: onnxruntime
      - name: 'Run ONNX build script'
        run: ./build.sh --build --config Release --parallel --compile_no_warning_as_error --skip_submodule_sync
        working-directory: onnxruntime
      - run: ls -alRh onnxruntime/build/Linux > ls-output.txt
      - name: "Store 'ls' Output"
        uses: actions/upload-artifact@v4
        with:
          name: ls-output.txt
          path: ls-output.txt
      - run: zip onnx-build-result.zip onnxruntime/build/Linux/Release/**
      - name: "Store built ONNX Runtime"
        uses: actions/upload-artifact@v4
        with:
          name: onnx-build-result.zip
          path: onnx-build-result.zip
      - run: rustup target add x86_64-unknown-linux-musl 
      - run: cargo build --target=x86_64-unknown-linux-musl --release --features=bin --bin magika
        env: 
          ORT_LIB_LOCATION: "$(dirname $(pwd))/onnxruntime/build/Linux/Release"
        working-directory: rust
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: magika
          path: rust/target/release/magika
